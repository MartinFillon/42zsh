name: Pain-au-chocolat
run-name: ${{ github.actor }}
on:
  push:
    branches:
      - main

env:
  MIRROR_URL: "git@github.com:EpitechPromo2027/B-PSU-200-PAR-2-1-42sh-martin.saldinger.git"
  MIRROR_URL_IT: "git@github.com:EpitechPromo2027/B-PSU-200-PAR-2-2-42sh-lou.onezime.git"
  EXECUTABLES: "42sh"
  REPORT_FILE: "coding-style-reports.log"

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: |
          /usr/local/bin/check.sh $(pwd) $(pwd)
      - run: |
          cat $REPORT_FILE | while read LINE; do
            TYPE=$(echo $LINE | cut -d ':' -f 3 | tr -d ' ')
            FILE=$(echo $LINE | cut -d ':' -f 1)
            AT=$(echo $LINE | cut -d ':' -f 2)
            ERROR=$(echo $LINE | cut -d ':' -f 4)
            echo "::error file=$FILE,line=$AT,title=$TYPE coding style error::$ERROR"
          done
          if [[ "$(cat $REPORT_FILE)" != "" ]]; then
            exit 1
          fi

  check_program_compilation:
    runs-on: ubuntu-latest
    needs: [check_coding_style]
    container:
      image: epitechcontent/epitest-docker
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: |
          timeout 120 make && make clean
      - run: |
          for EXECUTABLE in $(echo $EXECUTABLES | tr "," "\n"); do
            if [[ ! -f $EXECUTABLE ]]; then
              echo "::error file=Makefile,title=Makefile error::Missing executable $EXECUTABLE"
              exit 1
            fi
          done

  push_to_mirror:
    runs-on: ubuntu-latest
    needs: [check_coding_style, check_program_compilation]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.KEY }}
  push_to_mirror_it:
    runs-on: ubuntu-latest
    needs: [check_coding_style, check_program_compilation]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.MIRROR_URL_IT }}
          ssh_private_key:
            ${{ secrets.KEY_LOU }}
